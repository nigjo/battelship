<?xml version="1.0" encoding="UTF-8"?>
<project name="Battleship-root" default="build" basedir=".">
  <target name="-root-init" depends="download-libraries">
    <path id="jars" >
      <fileset dir="dist" includes="**/*.jar" erroronmissingdir="false"/>
    </path>
    <presetdef name="subbuild">
      <ant inheritall="false" inheritrefs="false">
        <property name="dist.dir" location="dist"/>
        <property name="do.depend" location="false"/>
        <property name="do.jar" location="true"/>
        <property name="libsdone" value="true"/>
        <property name="javac.classpath" location="${toString:jars}"/>
      </ant>
    </presetdef>
  </target>

  <target name="clean" depends="-root-init">
    <subbuild dir="ui" target="clean"/>
    <subbuild dir="core" target="clean"/>
  </target>

  <target name="build" depends="-root-init">
    <mkdir dir="dist"/>
    <subbuild dir="core">
      <target name="test"/>
      <target name="jar"/>
      <target name="javadoc"/>
    </subbuild>
    <subbuild dir="ui">
      <target name="test"/>
      <target name="jar"/>
      <target name="javadoc"/>
    </subbuild>

    <pathconvert property="winClasspath" pathsep=";" dirsep="\">
      <path refid="jars"/>
      <globmapper from="${basedir}${file.separator}dist${file.separator}*" to="%~dp0*"/>
    </pathconvert>

    <echo file="dist/BattleShip.cmd"><![CDATA[@echo off
setlocal
set "BATTLESHIP_cp=${winClasspath}"
if not defined JAVA_HOME (
  for /F "delims=*" %%J in ('where javaw.exe') do (
    if exist "%%~dpJ..\bin\javaw.exe" set "JAVA_HOME=%%~dpJ.."
  )
)
"%JAVA_HOME%\bin\java.exe" -cp "%BATTLESHIP_cp%" de.nigjo.battleship.Launcher %*
]]></echo>
  </target>

  <target name="create-release" depends="clean,build"
          description="clean and build all"/>

  <target name="-init-download" unless="${libsdone}">
    <property name="baseurl" value="https://repo1.maven.org/maven2"/>

    <macrodef name="download">
      <attribute name="group"/>
      <attribute name="artifact"/>
      <attribute name="version"/>
      <sequential>
        <local name="slashed"/>
        <loadresource property="slashed">
          <string>@{group}</string>
          <filterchain>
            <tokenfilter delimoutput="/">
              <stringtokenizer delims="."/>
            </tokenfilter>
          </filterchain>
        </loadresource>
        <!--https://search.maven.org/remotecontent?filepath=org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar-->
        <!--https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/5.10.1/junit-jupiter-api-5.10.1.jar-->
        <mkdir dir="lib/@{group}"/>
        <get src="${baseurl}/${slashed}/@{artifact}/@{version}/@{artifact}-@{version}.jar"
             dest="lib/@{group}/@{artifact}-@{version}.jar" skipexisting="true"/>
      </sequential>
    </macrodef>

    <macrodef name="library">
      <attribute name="name"/>
      <attribute name="displayName"/>
      <attribute name="version"/>
      <attribute name="jarbase" default="@{name}"/>
      <element name="downloads"/>
      <sequential>
        <property name="@{name}.version" value="@{version}"/>
        <downloads/>
        <property name="libs.@{name}.displayName" value="@{displayName} ${@{name}.version}"/>
        <pathconvert property="libs.@{name}.classpath">
          <fileset dir="lib" includes="**/@{jarbase}-*@{version}.jar"/>
          <globmapper from="${basedir}*" to="..*"/>
        </pathconvert>
      </sequential>
    </macrodef>

    <uptodate targetfile="lib/nblibraries.properties" srcfile="${ant.file.Battleship-root}"
              property="libsdone"/>

  </target>
  <target name="download-libraries" depends="-init-download" unless="${libsdone}">
    <property name="libsdone" value="true"/>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <library name="apiguardian" version="1.1.2"
             displayName="API Guardian">
      <downloads>
        <download artifact="apiguardian-api" group="org.apiguardian" version="${apiguardian.version}"/>
      </downloads>
    </library>
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <library name="opentest4j" version="1.3.0"
             displayName="Open Test Alliance for the JVM">
      <downloads>
        <download artifact="opentest4j" group="org.opentest4j" version="${opentest4j.version}"/>
      </downloads>
    </library>
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <library name="junit_5" version="5.10.1"
             displayName="JUnit" jarbase="junit-jupiter">
      <downloads>
        <download artifact="junit-jupiter-api" group="org.junit.jupiter" version="${junit_5.version}"/>
        <download artifact="junit-jupiter-params" group="org.junit.jupiter" version="${junit_5.version}"/>
        <download artifact="junit-jupiter-engine" group="org.junit.jupiter" version="${junit_5.version}"/>
      </downloads>
    </library>
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <library name="junit_platform" version="1.10.1"
             displayName="JUnit Platfrom" jarbase="junit-platform">
      <downloads>
        <download artifact="junit-platform-console" group="org.junit.platform" version="${junit_platform.version}"/>
        <download artifact="junit-platform-reporting" group="org.junit.platform" version="${junit_platform.version}"/>
        <download artifact="junit-platform-launcher" group="org.junit.platform" version="${junit_platform.version}"/>
        <download artifact="junit-platform-engine" group="org.junit.platform" version="${junit_platform.version}"/>
        <download artifact="junit-platform-commons" group="org.junit.platform" version="${junit_platform.version}"/>
      </downloads>
    </library>
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!--store all libs-->
    <echoproperties destfile="lib/nblibraries.properties">
      <propertyset>
        <propertyref prefix="libs."/>
      </propertyset>
    </echoproperties>
  </target>
</project>
